@startuml
interface interfaces.Location {
~ void changeDestination(String)
~ String toString()
~ boolean equals(Object)
~ int hashCode()
}
class people.Hemyl {
+ String toString()
}
abstract class abstractClasses.Person {
~ String person_action
~ String original_person_action
~ String name
~ boolean madness
+ void behave_as_somebody_else(Person)
+ void calm_down()
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
class people.PreviousOwners {
+ String toString()
}
class people.Mymla {
+ String toString()
}
class objects.Handcrafts {
~ String material
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
enum objects.DoorDestination {
+  SOMEWHERE
+  NOWHERE
- String destination
}
class objects.Door {
~ DoorDestination destination
+ void changeDestination(String)
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
enum objects.StairsDestination {
+  UP
+  DOWN
- String destination
}
class objects.Stairs {
~ StairsDestination destination
+ void changeDestination(String)
+ String toString()
+ boolean equals(Object)
+ int hashCode()
}
class people.Misa {
+ String toString()
}
class Main {
+ {static} void main(String[])
}
interface interfaces.Junk {
+ {static} String desription
~ String toString()
~ boolean equals(Object)
~ int hashCode()
}
class people.Homsa {
+ String toString()
}


abstractClasses.Person <|-- people.Hemyl
abstractClasses.Person <|-- people.PreviousOwners
abstractClasses.Person <|-- people.Mymla
interfaces.Junk <|.. objects.Handcrafts
interfaces.Location <|.. objects.Door
interfaces.Location <|.. objects.Stairs
abstractClasses.Person <|-- people.Misa
abstractClasses.Person <|-- people.Homsa
@enduml